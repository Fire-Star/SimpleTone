<?xml version="1.0" encoding="UTF-8"?>
<web-app xmlns="http://xmlns.jcp.org/xml/ns/javaee"
         xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
         xsi:schemaLocation="http://xmlns.jcp.org/xml/ns/javaee http://xmlns.jcp.org/xml/ns/javaee/web-app_3_1.xsd"
         version="3.1">
  <!-- 配置访问静态资源 -->
  <servlet-mapping>
    <servlet-name>default</servlet-name>
    <url-pattern>*.jpg</url-pattern>
    <url-pattern>*.txt</url-pattern>
    <url-pattern>*.js</url-pattern>
    <url-pattern>*.ico</url-pattern>
    <url-pattern>*.css</url-pattern>
    <url-pattern>*.htm</url-pattern>
    <url-pattern>*.html</url-pattern>
    <url-pattern>*.map</url-pattern>
    <url-pattern>*.png</url-pattern>
    <url-pattern>*.woff</url-pattern>
    <url-pattern>*.woff2</url-pattern>
    <url-pattern>*.ttf</url-pattern>
    <url-pattern>*.zip</url-pattern>
    <url-pattern>*.rar</url-pattern>
  </servlet-mapping>

  <!-- 解决GET POST乱码 -->
  <!-- 但是 参数绑定依然乱码！！！ -->
  <filter>
    <filter-name>EncordingFilter</filter-name>
    <filter-class>cn.domarvel.web.filter.EncordingFilter</filter-class>
  </filter>
  <filter-mapping>
    <filter-name>EncordingFilter</filter-name>
    <url-pattern>/*</url-pattern>
  </filter-mapping>

  <!-- Spring的配置文件 -->
  <context-param>
    <param-name>contextConfigLocation</param-name>
    <param-value>
      classpath:Spring/application*.xml
    </param-value>
  </context-param>
  <!-- Spring的web整合方式 -->
  <listener>
    <listener-class>org.springframework.web.context.ContextLoaderListener</listener-class>
  </listener>

  <!-- SpringMVC前端控制器 -->
  <servlet>
    <servlet-name>SpringMVC</servlet-name>
    <servlet-class>org.springframework.web.servlet.DispatcherServlet</servlet-class>
    <!-- contextConfigLocation配置SpringMVC加载的配置文件（配置处理器映射器、适配器等等）
        如果不配置contextConfigLocation，默认加载的是/WEB-INF/servlet名称-servlet.xml(SpringMVC-servlet.xml)
    -->
    <init-param>
      <param-name>contextConfigLocation</param-name>
      <param-value>classpath:SpringMVC/application-SpringMVC.xml</param-value>
    </init-param>
  </servlet>

  <servlet-mapping>
    <servlet-name>SpringMVC</servlet-name>
    <!--
        第一种：*.action，访问以.action结尾由DispatcherServlet进行解析
        第二种：/，所以访问的地址由DispatcherServlet进行解析，对于静态文件的解析需要配置不让DispatcherServlet进行解析，对于静态文件的解析需要配置，不让DispatcherServlet进行解析。
        使用此种方式可以实现 RESTful 风格的url 。
        第三种：/*，这样配置不对，使用这种配置，最终要转发到一个jsp页面时，仍然会由DispatcherServlet解析jsp地址，不能根据jsp页面找到Handler，会报错。
    -->
    <url-pattern>/</url-pattern>
  </servlet-mapping>
</web-app>
